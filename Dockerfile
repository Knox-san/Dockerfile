FROM ubuntu:22.04

# Install base dependencies
RUN apt-get update -y && \
    apt-get upgrade -y && \
    apt-get install -y sudo curl ffmpeg git locales nano python3-pip screen ssh unzip wget autossh netcat-openbsd

# Set up locale
RUN localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8
ENV LANG en_US.utf8

# Download and install bore
RUN curl -L https://github.com/ekzhang/bore/releases/download/v0.5.0/bore-v0.5.0-x86_64-unknown-linux-musl.tar.gz \
    -o bore.tar.gz && \
    tar -xzf bore.tar.gz && \
    mv bore /usr/local/bin/ && \
    chmod +x /usr/local/bin/bore && \
    rm bore.tar.gz

# Configure SSH with Render-friendly settings
RUN mkdir -p /run/sshd && \
    mkdir -p /root/.ssh && \
    echo 'ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIFshKeW/SRrfepjUPfA8LfZRg3sqX4rKhrSXB5w6K1Li Generated By Termius' > /root/.ssh/authorized_keys && \
    chmod 700 /root/.ssh && \
    chmod 600 /root/.ssh/authorized_keys && \
    echo 'Port 22' >> /etc/ssh/sshd_config && \
    echo 'Protocol 2' >> /etc/ssh/sshd_config && \
    echo 'PermitRootLogin yes' >> /etc/ssh/sshd_config && \
    echo 'PasswordAuthentication yes' >> /etc/ssh/sshd_config && \
    echo 'PubkeyAuthentication yes' >> /etc/ssh/sshd_config && \
    echo 'AuthorizedKeysFile .ssh/authorized_keys' >> /etc/ssh/sshd_config && \
    echo 'ClientAliveInterval 30' >> /etc/ssh/sshd_config && \
    echo 'ClientAliveCountMax 6' >> /etc/ssh/sshd_config && \
    echo 'TCPKeepAlive yes' >> /etc/ssh/sshd_config && \
    echo 'UseDNS no' >> /etc/ssh/sshd_config && \
    echo 'GatewayPorts yes' >> /etc/ssh/sshd_config && \
    echo 'AllowTcpForwarding yes' >> /etc/ssh/sshd_config && \
    echo 'X11Forwarding no' >> /etc/ssh/sshd_config && \
    echo 'Compression yes' >> /etc/ssh/sshd_config && \
    echo 'LogLevel VERBOSE' >> /etc/ssh/sshd_config && \
    echo 'root:choco' | chpasswd && \
    ssh-keygen -A

# Create web content
RUN mkdir -p /var/www && \
    echo "<html><body><h1>Python HTTP Server Working!</h1><p>SSH access via bore.pub tunnel</p><p>SSH: bore.pub:PORT</p><p>User: root</p><p>Pass: choco</p></body></html>" > /var/www/index.html

# Create startup script with enhanced tunnel and proper port handling
RUN echo "#!/bin/sh" > /start && \
    echo "# Set PORT from environment or default" >> /start && \
    echo "export PORT=\${PORT:-10000}" >> /start && \
    echo "echo \"[INFO] Using PORT: \$PORT\"" >> /start && \
    echo "" >> /start && \
    echo "# Start HTTP server on correct port" >> /start && \
    echo "cd /var/www && python3 -m http.server \$PORT --bind 0.0.0.0 &" >> /start && \
    echo "HTTP_PID=\$!" >> /start && \
    echo "echo \"[INFO] HTTP server started on port \$PORT (PID: \$HTTP_PID)\"" >> /start && \
    echo "" >> /start && \
    echo "# Test SSH daemon before starting" >> /start && \
    echo "echo \"[INFO] Testing SSH configuration...\"" >> /start && \
    echo "/usr/sbin/sshd -t && echo \"[INFO] SSH config OK\" || echo \"[ERROR] SSH config failed\"" >> /start && \
    echo "" >> /start && \
    echo "# Start SSH daemon" >> /start && \
    echo "/usr/sbin/sshd -D &" >> /start && \
    echo "SSH_PID=\$!" >> /start && \
    echo "echo \"[INFO] SSH daemon started (PID: \$SSH_PID)\"" >> /start && \
    echo "" >> /start && \
    echo "# Wait for SSH to be ready" >> /start && \
    echo "sleep 3" >> /start && \
    echo "echo \"[INFO] Testing SSH connectivity...\"" >> /start && \
    echo "nc -z localhost 22 && echo \"[INFO] SSH port 22 is open\" || echo \"[ERROR] SSH port 22 not accessible\"" >> /start && \
    echo "" >> /start && \
    echo "# Enhanced tunnel loop with better error handling" >> /start && \
    echo "RETRY_COUNT=0" >> /start && \
    echo "while true; do" >> /start && \
    echo "    RETRY_COUNT=\$((RETRY_COUNT + 1))" >> /start && \
    echo "    echo \"[\$(date)] Starting tunnel attempt #\$RETRY_COUNT...\"" >> /start && \
    echo "    " >> /start && \
    echo "    # Test local SSH before tunneling" >> /start && \
    echo "    if ! nc -z localhost 22; then" >> /start && \
    echo "        echo \"[\$(date)] ERROR: Local SSH not responding, restarting SSH daemon\"" >> /start && \
    echo "        kill \$SSH_PID 2>/dev/null" >> /start && \
    echo "        /usr/sbin/sshd -D &" >> /start && \
    echo "        SSH_PID=\$!" >> /start && \
    echo "        sleep 3" >> /start && \
    echo "    fi" >> /start && \
    echo "    " >> /start && \
    echo "    # Start bore tunnel with timeout and verbose output" >> /start && \
    echo "    timeout 7200 bore local 22 --to bore.pub 2>&1 | while IFS= read -r line; do" >> /start && \
    echo "        echo \"[\$(date)] TUNNEL: \$line\"" >> /start && \
    echo "        # Extract and highlight the port number" >> /start && \
    echo "        if echo \"\$line\" | grep -q \"listening at bore.pub:\"; then" >> /start && \
    echo "            PORT_NUM=\$(echo \"\$line\" | grep -o 'bore.pub:[0-9]*' | cut -d: -f2)" >> /start && \
    echo "            echo \"\"" >> /start && \
    echo "            echo \"======================================\"" >> /start && \
    echo "            echo \"  SSH TUNNEL READY!\"" >> /start && \
    echo "            echo \"  Host: bore.pub\"" >> /start && \
    echo "            echo \"  Port: \$PORT_NUM\"" >> /start && \
    echo "            echo \"  User: root\"" >> /start && \
    echo "            echo \"  Pass: choco\"" >> /start && \
    echo "            echo \"  Command: ssh root@bore.pub -p \$PORT_NUM\"" >> /start && \
    echo "            echo \"======================================\"" >> /start && \
    echo "            echo \"\"" >> /start && \
    echo "        fi" >> /start && \
    echo "    done" >> /start && \
    echo "    " >> /start && \
    echo "    TUNNEL_EXIT=\$?" >> /start && \
    echo "    echo \"[\$(date)] Tunnel exited with code \$TUNNEL_EXIT (attempt #\$RETRY_COUNT)\"" >> /start && \
    echo "    " >> /start && \
    echo "    # Progressive backoff" >> /start && \
    echo "    if [ \$RETRY_COUNT -lt 5 ]; then" >> /start && \
    echo "        DELAY=2" >> /start && \
    echo "    elif [ \$RETRY_COUNT -lt 10 ]; then" >> /start && \
    echo "        DELAY=5" >> /start && \
    echo "    else" >> /start && \
    echo "        DELAY=10" >> /start && \
    echo "    fi" >> /start && \
    echo "    " >> /start && \
    echo "    echo \"[\$(date)] Restarting in \$DELAY seconds...\"" >> /start && \
    echo "    sleep \$DELAY" >> /start && \
    echo "done" >> /start && \
    chmod +x /start

# Health check - use environment PORT
HEALTHCHECK --interval=30s --timeout=30s --start-period=10s --retries=3 \
    CMD curl -f http://localhost:${PORT:-10000}/ || exit 1

# Set default port for Render
ENV PORT=10000
EXPOSE $PORT 22

CMD /start
